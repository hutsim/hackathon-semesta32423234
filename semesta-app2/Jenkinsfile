pipeline {
    agent any
        environment {
                PROJECT_ID = 'semesta-390801'
                CLUSTER_NAME = 'semesta-cluster'
                LOCATION = 'asia-southeast1-a'
                CREDENTIALS_ID = 'kubernetes'
        }

    stages {
            stage('Scm Checkout') {
                    steps {
                            checkout scm
                    }
            }
            
           
            stage('Build Docker Image') {
                    steps {
                            script {
                                 def imageName = "unvizy/s-app1:${env.BUILD_ID}"
                                 docker.build(imageName, "-f semesta-app2/Dockerfile .")
                            }
                    }
            }
            
            stage("Push Docker Image") {
                    steps {
                            script {
                                    echo "Push Docker Image"
                                    withCredentials([string(credentialsId: 'dockerhub', variable: 'dockerhub')]) {
                                        sh "docker login -u unvizy -p ${dockerhub}"
                                    }
                                        myimage.push("${env.BUILD_ID}")
                                    
                            }
                    }
            }
            
            stage('Deploy to K8s') {
                    steps{
                            echo "Deployment started ..."
                            sh 'ls -ltr'
                            sh 'pwd'
                            sh "sed -i 's/tagversion/${env.BUILD_ID}/g' semesta-app2/deployment.yaml"
                            echo "Start deployment of deployment.yaml"
                            step([$class: 'KubernetesEngineBuilder', projectId: env.PROJECT_ID, clusterName: env.CLUSTER_NAME, location: env.LOCATION, manifestPattern: 'semesta-app2/deployment.yaml', credentialsId: env.CREDENTIALS_ID])
                            echo "Deployment Finished ..."
                    }
            }
    }
}
